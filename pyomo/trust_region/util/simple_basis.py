import numpy as np

# THESE ARE NOT WELL TESTED

BASIS_POLYNOMIALS_2D = [{
        "func": lambda x: 1.0,
        "grad": lambda x: np.array([0.0, 0.0]),
        "hess": lambda x: np.array([[0.0, 0.0], [0.0, 0.0]]),
        "degree": 0
},{
        "func": lambda x: x[0],
        "grad": lambda x: np.array([1.0, 0.0]),
        "hess": lambda x: np.array([[0.0, 0.0], [0.0, 0.0]]),
        "degree": 1
}, {
        "func": lambda x: x[1],
        "grad": lambda x: np.array([0.0, 1.0]),
        "hess": lambda x: np.array([[0.0, 0.0], [0.0, 0.0]]),
        "degree": 1
},{
        "func": lambda x: 1.0/(1*2)*x[0]*x[0],
        "grad": lambda x: np.array([2*1.0/(1*2)*x[0], 0.0]),
        "hess": lambda x: np.array([[2*1.0/(1*2), 0.0], [0.0, 0.0]]),
        "degree": 2
}, {
        "func": lambda x: 1.0/(1*2)*x[0]*x[1],
        "grad": lambda x: np.array([1.0/(1*2)*x[1], 1.0/(1*2)*x[0]]),
        "hess": lambda x: np.array([[0.0, 1.0/(1*2)], [1.0/(1*2), 0.0]]),
        "degree": 2
}, {
        "func": lambda x: 1.0/(1*2)*x[1]*x[1],
        "grad": lambda x: np.array([0.0, 2*1.0/(1*2)*x[1]]),
        "hess": lambda x: np.array([[0.0, 0.0], [0.0, 2*1.0/(1*2)]]),
        "degree": 2
},{
        "func": lambda x: 1.0/(1*2*3)*x[0]*x[0]*x[0],
        "grad": lambda x: np.array([3*1.0/(1*2*3)*x[0]*x[0], 0.0]),
        "hess": lambda x: np.array([[3*2*1.0/(1*2*3)*x[0], 0.0], [0.0, 0.0]]),
        "degree": 3
}, {
        "func": lambda x: 1.0/(1*2*3)*x[0]*x[0]*x[1],
        "grad": lambda x: np.array([2*1.0/(1*2*3)*x[1]*x[0], 1.0/(1*2*3)*x[0]*x[0]]),
        "hess": lambda x: np.array([[2*1.0/(1*2*3)*x[1], 2*1.0/(1*2*3)*x[0]], [2*1.0/(1*2*3)*x[0], 0.0]]),
        "degree": 3
}, {
        "func": lambda x: 1.0/(1*2*3)*x[0]*x[1]*x[1],
        "grad": lambda x: np.array([1.0/(1*2*3)*x[1]*x[1], 2*1.0/(1*2*3)*x[0]*x[1]]),
        "hess": lambda x: np.array([[0.0, 2*1.0/(1*2*3)*x[1]], [2*1.0/(1*2*3)*x[1], 2*1.0/(1*2*3)*x[0]]]),
        "degree": 3
}, {
        "func": lambda x: 1.0/(1*2*3)*x[1]*x[1]*x[1],
        "grad": lambda x: np.array([0.0, 3*1.0/(1*2*3)*x[1]*x[1]]),
        "hess": lambda x: np.array([[0.0, 0.0], [0.0, 3*2*1.0/(1*2*3)*x[1]]]),
        "degree": 3
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[0]*x[0]*x[0]*x[0],
        "grad": lambda x: np.array([4*1.0/(1*2*3*4)*x[0]*x[0]*x[0], 0.0]),
        "hess": lambda x: np.array([[4*3*1.0/(1*2*3*4)*x[0]*x[0], 0.0], [0.0, 0.0]]),
        "degree": 4
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[0]*x[0]*x[0]*x[1],
        "grad": lambda x: np.array([3*1.0/(1*2*3*4)*x[1]*x[0]*x[0], 1.0/(1*2*3*4)*x[0]*x[0]*x[0]]),
        "hess": lambda x: np.array([[3*2*1.0/(1*2*3*4)*x[1]*x[0], 3*1.0/(1*2*3*4)*x[0]*x[0]], [3*1.0/(1*2*3*4)*x[0]*x[0], 0.0]]),
        "degree": 4
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[0]*x[0]*x[1]*x[1],
        "grad": lambda x: np.array([2*1.0/(1*2*3*4)*x[1]*x[1]*x[0], 2*1.0/(1*2*3*4)*x[0]*x[0]*x[1]]),
        "hess": lambda x: np.array([[2*1.0/(1*2*3*4)*x[1]*x[1], 2*2*1.0/(1*2*3*4)*x[1]*x[0]], [2*2*1.0/(1*2*3*4)*x[0]*x[1], 2*1.0/(1*2*3*4)*x[0]*x[0]]]),
        "degree": 4
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[0]*x[1]*x[1]*x[1],
        "grad": lambda x: np.array([1.0/(1*2*3*4)*x[1]*x[1]*x[1], 3*1.0/(1*2*3*4)*x[0]*x[1]*x[1]]),
        "hess": lambda x: np.array([[0.0, 3*1.0/(1*2*3*4)*x[1]*x[1]], [3*1.0/(1*2*3*4)*x[1]*x[1], 3*2*1.0/(1*2*3*4)*x[0]*x[1]]]),
        "degree": 4
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[1]*x[1]*x[1]*x[1],
        "grad": lambda x: np.array([0.0, 4*1.0/(1*2*3*4)*x[1]*x[1]*x[1]]),
        "hess": lambda x: np.array([[0.0, 0.0], [0.0, 4*3*1.0/(1*2*3*4)*x[1]*x[1]]]),
        "degree": 4
}]

BASIS_POLYNOMIALS_3D = [{
        "func": lambda x: 1.0,
        "grad": lambda x: np.array([0.0, 0.0, 0.0]),
        "hess": lambda x: np.array([[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]),
        "degree": 0
}, {
        "func": lambda x: x[0],
        "grad": lambda x: np.array([1.0, 0.0, 0.0]),
        "hess": lambda x: np.array([[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]),
        "degree": 1
}, {
        "func": lambda x: x[1],
        "grad": lambda x: np.array([0.0, 1.0, 0.0]),
        "hess": lambda x: np.array([[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]),
        "degree": 1
}, {
        "func": lambda x: x[2],
        "grad": lambda x: np.array([0.0, 0.0, 1.0]),
        "hess": lambda x: np.array([[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]),
        "degree": 1
},{
        "func": lambda x: 1.0/(1*2)*x[0]*x[0],
        "grad": lambda x: np.array([2*1.0/(1*2)*x[0], 0.0, 0.0]),
        "hess": lambda x: np.array([[2*1.0/(1*2), 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]),
        "degree": 2
}, {
        "func": lambda x: 1.0/(1*2)*x[0]*x[1],
        "grad": lambda x: np.array([1.0/(1*2)*x[1], 1.0/(1*2)*x[0], 0.0]),
        "hess": lambda x: np.array([[0.0, 1.0/(1*2), 0.0], [1.0/(1*2), 0.0, 0.0], [0.0, 0.0, 0.0]]),
        "degree": 2
}, {
        "func": lambda x: 1.0/(1*2)*x[0]*x[2],
        "grad": lambda x: np.array([1.0/(1*2)*x[2], 0.0, 1.0/(1*2)*x[0]]),
        "hess": lambda x: np.array([[0.0, 0.0, 1.0/(1*2)], [0.0, 0.0, 0.0], [1.0/(1*2), 0.0, 0.0]]),
        "degree": 2
}, {
        "func": lambda x: 1.0/(1*2)*x[1]*x[1],
        "grad": lambda x: np.array([0.0, 2*1.0/(1*2)*x[1], 0.0]),
        "hess": lambda x: np.array([[0.0, 0.0, 0.0], [0.0, 2*1.0/(1*2), 0.0], [0.0, 0.0, 0.0]]),
        "degree": 2
}, {
        "func": lambda x: 1.0/(1*2)*x[1]*x[2],
        "grad": lambda x: np.array([0.0, 1.0/(1*2)*x[2], 1.0/(1*2)*x[1]]),
        "hess": lambda x: np.array([[0.0, 0.0, 0.0], [0.0, 0.0, 1.0/(1*2)], [0.0, 1.0/(1*2), 0.0]]),
        "degree": 2
}, {
        "func": lambda x: 1.0/(1*2)*x[2]*x[2],
        "grad": lambda x: np.array([0.0, 0.0, 2*1.0/(1*2)*x[2]]),
        "hess": lambda x: np.array([[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 2*1.0/(1*2)]]),
        "degree": 2
},{
        "func": lambda x: 1.0/(1*2*3)*x[0]*x[0]*x[0],
        "grad": lambda x: np.array([3*1.0/(1*2*3)*x[0]*x[0], 0.0, 0.0]),
        "hess": lambda x: np.array([[3*2*1.0/(1*2*3)*x[0], 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]),
        "degree": 3
}, {
        "func": lambda x: 1.0/(1*2*3)*x[0]*x[0]*x[1],
        "grad": lambda x: np.array([2*1.0/(1*2*3)*x[1]*x[0], 1.0/(1*2*3)*x[0]*x[0], 0.0]),
        "hess": lambda x: np.array([[2*1.0/(1*2*3)*x[1], 2*1.0/(1*2*3)*x[0], 0.0], [2*1.0/(1*2*3)*x[0], 0.0, 0.0], [0.0, 0.0, 0.0]]),
        "degree": 3
}, {
        "func": lambda x: 1.0/(1*2*3)*x[0]*x[0]*x[2],
        "grad": lambda x: np.array([2*1.0/(1*2*3)*x[2]*x[0], 0.0, 1.0/(1*2*3)*x[0]*x[0]]),
        "hess": lambda x: np.array([[2*1.0/(1*2*3)*x[2], 0.0, 2*1.0/(1*2*3)*x[0]], [0.0, 0.0, 0.0], [2*1.0/(1*2*3)*x[0], 0.0, 0.0]]),
        "degree": 3
}, {
        "func": lambda x: 1.0/(1*2*3)*x[0]*x[1]*x[1],
        "grad": lambda x: np.array([1.0/(1*2*3)*x[1]*x[1], 2*1.0/(1*2*3)*x[0]*x[1], 0.0]),
        "hess": lambda x: np.array([[0.0, 2*1.0/(1*2*3)*x[1], 0.0], [2*1.0/(1*2*3)*x[1], 2*1.0/(1*2*3)*x[0], 0.0], [0.0, 0.0, 0.0]]),
        "degree": 3
}, {
        "func": lambda x: 1.0/(1*2*3)*x[0]*x[1]*x[2],
        "grad": lambda x: np.array([1.0/(1*2*3)*x[1]*x[2], 1.0/(1*2*3)*x[0]*x[2], 1.0/(1*2*3)*x[0]*x[1]]),
        "hess": lambda x: np.array([[0.0, 1.0/(1*2*3)*x[2], 1.0/(1*2*3)*x[1]], [1.0/(1*2*3)*x[2], 0.0, 1.0/(1*2*3)*x[0]], [1.0/(1*2*3)*x[1], 1.0/(1*2*3)*x[0], 0.0]]),
        "degree": 3
}, {
        "func": lambda x: 1.0/(1*2*3)*x[0]*x[2]*x[2],
        "grad": lambda x: np.array([1.0/(1*2*3)*x[2]*x[2], 0.0, 2*1.0/(1*2*3)*x[0]*x[2]]),
        "hess": lambda x: np.array([[0.0, 0.0, 2*1.0/(1*2*3)*x[2]], [0.0, 0.0, 0.0], [2*1.0/(1*2*3)*x[2], 0.0, 2*1.0/(1*2*3)*x[0]]]),
        "degree": 3
}, {
        "func": lambda x: 1.0/(1*2*3)*x[1]*x[1]*x[1],
        "grad": lambda x: np.array([0.0, 3*1.0/(1*2*3)*x[1]*x[1], 0.0]),
        "hess": lambda x: np.array([[0.0, 0.0, 0.0], [0.0, 3*2*1.0/(1*2*3)*x[1], 0.0], [0.0, 0.0, 0.0]]),
        "degree": 3
}, {
        "func": lambda x: 1.0/(1*2*3)*x[1]*x[1]*x[2],
        "grad": lambda x: np.array([0.0, 2*1.0/(1*2*3)*x[2]*x[1], 1.0/(1*2*3)*x[1]*x[1]]),
        "hess": lambda x: np.array([[0.0, 0.0, 0.0], [0.0, 2*1.0/(1*2*3)*x[2], 2*1.0/(1*2*3)*x[1]], [0.0, 2*1.0/(1*2*3)*x[1], 0.0]]),
        "degree": 3
}, {
        "func": lambda x: 1.0/(1*2*3)*x[1]*x[2]*x[2],
        "grad": lambda x: np.array([0.0, 1.0/(1*2*3)*x[2]*x[2], 2*1.0/(1*2*3)*x[1]*x[2]]),
        "hess": lambda x: np.array([[0.0, 0.0, 0.0], [0.0, 0.0, 2*1.0/(1*2*3)*x[2]], [0.0, 2*1.0/(1*2*3)*x[2], 2*1.0/(1*2*3)*x[1]]]),
        "degree": 3
}, {
        "func": lambda x: 1.0/(1*2*3)*x[2]*x[2]*x[2],
        "grad": lambda x: np.array([0.0, 0.0, 3*1.0/(1*2*3)*x[2]*x[2]]),
        "hess": lambda x: np.array([[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 3*2*1.0/(1*2*3)*x[2]]]),
        "degree": 3
},{
        "func": lambda x: 1.0/(1*2*3*4)*x[0]*x[0]*x[0]*x[0],
        "grad": lambda x: np.array([4*1.0/(1*2*3*4)*x[0]*x[0]*x[0], 0.0, 0.0]),
        "hess": lambda x: np.array([[4*3*1.0/(1*2*3*4)*x[0]*x[0], 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]),
        "degree": 4
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[0]*x[0]*x[0]*x[1],
        "grad": lambda x: np.array([3*1.0/(1*2*3*4)*x[1]*x[0]*x[0], 1.0/(1*2*3*4)*x[0]*x[0]*x[0], 0.0]),
        "hess": lambda x: np.array([[3*2*1.0/(1*2*3*4)*x[1]*x[0], 3*1.0/(1*2*3*4)*x[0]*x[0], 0.0], [3*1.0/(1*2*3*4)*x[0]*x[0], 0.0, 0.0], [0.0, 0.0, 0.0]]),
        "degree": 4
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[0]*x[0]*x[0]*x[2],
        "grad": lambda x: np.array([3*1.0/(1*2*3*4)*x[2]*x[0]*x[0], 0.0, 1.0/(1*2*3*4)*x[0]*x[0]*x[0]]),
        "hess": lambda x: np.array([[3*2*1.0/(1*2*3*4)*x[2]*x[0], 0.0, 3*1.0/(1*2*3*4)*x[0]*x[0]], [0.0, 0.0, 0.0], [3*1.0/(1*2*3*4)*x[0]*x[0], 0.0, 0.0]]),
        "degree": 4
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[0]*x[0]*x[1]*x[1],
        "grad": lambda x: np.array([2*1.0/(1*2*3*4)*x[1]*x[1]*x[0], 2*1.0/(1*2*3*4)*x[0]*x[0]*x[1], 0.0]),
        "hess": lambda x: np.array([[2*1.0/(1*2*3*4)*x[1]*x[1], 2*2*1.0/(1*2*3*4)*x[1]*x[0], 0.0], [2*2*1.0/(1*2*3*4)*x[0]*x[1], 2*1.0/(1*2*3*4)*x[0]*x[0], 0.0], [0.0, 0.0, 0.0]]),
        "degree": 4
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[0]*x[0]*x[1]*x[2],
        "grad": lambda x: np.array([2*1.0/(1*2*3*4)*x[1]*x[2]*x[0], 1.0/(1*2*3*4)*x[0]*x[0]*x[2], 1.0/(1*2*3*4)*x[0]*x[0]*x[1]]),
        "hess": lambda x: np.array([[2*1.0/(1*2*3*4)*x[1]*x[2], 2*1.0/(1*2*3*4)*x[2]*x[0], 2*1.0/(1*2*3*4)*x[1]*x[0]], [2*1.0/(1*2*3*4)*x[2]*x[0], 0.0, 1.0/(1*2*3*4)*x[0]*x[0]], [2*1.0/(1*2*3*4)*x[1]*x[0], 1.0/(1*2*3*4)*x[0]*x[0], 0.0]]),
        "degree": 4
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[0]*x[0]*x[2]*x[2],
        "grad": lambda x: np.array([2*1.0/(1*2*3*4)*x[2]*x[2]*x[0], 0.0, 2*1.0/(1*2*3*4)*x[0]*x[0]*x[2]]),
        "hess": lambda x: np.array([[2*1.0/(1*2*3*4)*x[2]*x[2], 0.0, 2*2*1.0/(1*2*3*4)*x[2]*x[0]], [0.0, 0.0, 0.0], [2*2*1.0/(1*2*3*4)*x[0]*x[2], 0.0, 2*1.0/(1*2*3*4)*x[0]*x[0]]]),
        "degree": 4
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[0]*x[1]*x[1]*x[1],
        "grad": lambda x: np.array([1.0/(1*2*3*4)*x[1]*x[1]*x[1], 3*1.0/(1*2*3*4)*x[0]*x[1]*x[1], 0.0]),
        "hess": lambda x: np.array([[0.0, 3*1.0/(1*2*3*4)*x[1]*x[1], 0.0], [3*1.0/(1*2*3*4)*x[1]*x[1], 3*2*1.0/(1*2*3*4)*x[0]*x[1], 0.0], [0.0, 0.0, 0.0]]),
        "degree": 4
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[0]*x[1]*x[1]*x[2],
        "grad": lambda x: np.array([1.0/(1*2*3*4)*x[1]*x[1]*x[2], 2*1.0/(1*2*3*4)*x[0]*x[2]*x[1], 1.0/(1*2*3*4)*x[0]*x[1]*x[1]]),
        "hess": lambda x: np.array([[0.0, 2*1.0/(1*2*3*4)*x[2]*x[1], 1.0/(1*2*3*4)*x[1]*x[1]], [2*1.0/(1*2*3*4)*x[2]*x[1], 2*1.0/(1*2*3*4)*x[0]*x[2], 2*1.0/(1*2*3*4)*x[0]*x[1]], [1.0/(1*2*3*4)*x[1]*x[1], 2*1.0/(1*2*3*4)*x[0]*x[1], 0.0]]),
        "degree": 4
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[0]*x[1]*x[2]*x[2],
        "grad": lambda x: np.array([1.0/(1*2*3*4)*x[1]*x[2]*x[2], 1.0/(1*2*3*4)*x[0]*x[2]*x[2], 2*1.0/(1*2*3*4)*x[0]*x[1]*x[2]]),
        "hess": lambda x: np.array([[0.0, 1.0/(1*2*3*4)*x[2]*x[2], 2*1.0/(1*2*3*4)*x[1]*x[2]], [1.0/(1*2*3*4)*x[2]*x[2], 0.0, 2*1.0/(1*2*3*4)*x[0]*x[2]], [2*1.0/(1*2*3*4)*x[1]*x[2], 2*1.0/(1*2*3*4)*x[0]*x[2], 2*1.0/(1*2*3*4)*x[0]*x[1]]]),
        "degree": 4
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[0]*x[2]*x[2]*x[2],
        "grad": lambda x: np.array([1.0/(1*2*3*4)*x[2]*x[2]*x[2], 0.0, 3*1.0/(1*2*3*4)*x[0]*x[2]*x[2]]),
        "hess": lambda x: np.array([[0.0, 0.0, 3*1.0/(1*2*3*4)*x[2]*x[2]], [0.0, 0.0, 0.0], [3*1.0/(1*2*3*4)*x[2]*x[2], 0.0, 3*2*1.0/(1*2*3*4)*x[0]*x[2]]]),
        "degree": 4
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[1]*x[1]*x[1]*x[1],
        "grad": lambda x: np.array([0.0, 4*1.0/(1*2*3*4)*x[1]*x[1]*x[1], 0.0]),
        "hess": lambda x: np.array([[0.0, 0.0, 0.0], [0.0, 4*3*1.0/(1*2*3*4)*x[1]*x[1], 0.0], [0.0, 0.0, 0.0]]),
        "degree": 4
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[1]*x[1]*x[1]*x[2],
        "grad": lambda x: np.array([0.0, 3*1.0/(1*2*3*4)*x[2]*x[1]*x[1], 1.0/(1*2*3*4)*x[1]*x[1]*x[1]]),
        "hess": lambda x: np.array([[0.0, 0.0, 0.0], [0.0, 3*2*1.0/(1*2*3*4)*x[2]*x[1], 3*1.0/(1*2*3*4)*x[1]*x[1]], [0.0, 3*1.0/(1*2*3*4)*x[1]*x[1], 0.0]]),
        "degree": 4
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[1]*x[1]*x[2]*x[2],
        "grad": lambda x: np.array([0.0, 2*1.0/(1*2*3*4)*x[2]*x[2]*x[1], 2*1.0/(1*2*3*4)*x[1]*x[1]*x[2]]),
        "hess": lambda x: np.array([[0.0, 0.0, 0.0], [0.0, 2*1.0/(1*2*3*4)*x[2]*x[2], 2*2*1.0/(1*2*3*4)*x[2]*x[1]], [0.0, 2*2*1.0/(1*2*3*4)*x[1]*x[2], 2*1.0/(1*2*3*4)*x[1]*x[1]]]),
        "degree": 4
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[1]*x[2]*x[2]*x[2],
        "grad": lambda x: np.array([0.0, 1.0/(1*2*3*4)*x[2]*x[2]*x[2], 3*1.0/(1*2*3*4)*x[1]*x[2]*x[2]]),
        "hess": lambda x: np.array([[0.0, 0.0, 0.0], [0.0, 0.0, 3*1.0/(1*2*3*4)*x[2]*x[2]], [0.0, 3*1.0/(1*2*3*4)*x[2]*x[2], 3*2*1.0/(1*2*3*4)*x[1]*x[2]]]),
        "degree": 4
}, {
        "func": lambda x: 1.0/(1*2*3*4)*x[2]*x[2]*x[2]*x[2],
        "grad": lambda x: np.array([0.0, 0.0, 4*1.0/(1*2*3*4)*x[2]*x[2]*x[2]]),
        "hess": lambda x: np.array([[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 4*3*1.0/(1*2*3*4)*x[2]*x[2]]]),
        "degree": 4
}]
